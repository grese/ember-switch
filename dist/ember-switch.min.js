!function(){"use strict";var a=Em.Component.extend({layoutName:"ember-switch-template-main",classNames:["switch-component"],isChecked:!1,isDisabled:!1,labelOn:"Active",labelOff:"Inactive",labelPosition:"right",labelText:function(){return this.get(this.get("isChecked")?"labelOn":"labelOff")}.property("isChecked","labelOn","labelOff"),_positionLeft:function(){return"left"===this.get("labelPosition").toLowerCase()}.property("labelPosition"),_positionClass:function(){switch(this.get("labelPosition")){case"left":return"switch-label-left";default:return"switch-label-right"}}.property("labelPosition")});Ember.SwitchComponent=a,Ember.Handlebars.helper("switch-component",Ember.SwitchComponent)}(this),Ember.TEMPLATES["ember-switch-template-main"]=Ember.Handlebars.template(function(a,b,c,d,e){function f(a,b){var d,e="";return b.buffer.push("\n      "),d=c.unless.call(a,"hideText",{hash:{},hashTypes:{},hashContexts:{},inverse:n.noop,fn:n.program(2,g,b),contexts:[a],types:["ID"],data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n    "),e}function g(a,b){var d,e="";return b.buffer.push("\n         <span class='switch-text'>"),d=c._triageMustache.call(a,"labelText",{hash:{},hashTypes:{},hashContexts:{},contexts:[a],types:["ID"],data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("</span>\n      "),e}function h(a,b){var d,e="";return b.buffer.push("\n       "),d=c.unless.call(a,"hideText",{hash:{},hashTypes:{},hashContexts:{},inverse:n.noop,fn:n.program(5,i,b),contexts:[a],types:["ID"],data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n    "),e}function i(a,b){var d,e="";return b.buffer.push("\n         <span class='switch-text'>"),d=c._triageMustache.call(a,"labelText",{hash:{},hashTypes:{},hashContexts:{},contexts:[a],types:["ID"],data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("</span>\n       "),e}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var j,k,l,m="",n=this,o=this.escapeExpression,p=c.helperMissing;return e.buffer.push("<div "),e.buffer.push(o(c["bind-attr"].call(b,{hash:{"class":":switch _positionClass"},hashTypes:{"class":"STRING"},hashContexts:{"class":b},contexts:[],types:[],data:e}))),e.buffer.push(">\n    "),j=c["if"].call(b,"_positionLeft",{hash:{},hashTypes:{},hashContexts:{},inverse:n.noop,fn:n.program(1,f,e),contexts:[b],types:["ID"],data:e}),(j||0===j)&&e.buffer.push(j),e.buffer.push("\n	   "),e.buffer.push(o((k=c.input||b&&b.input,l={hash:{type:"checkbox",classNames:"switch-checkbox",checkedBinding:"isChecked",disabledBinding:"isDisabled",viewName:"switchCheckbox"},hashTypes:{type:"STRING",classNames:"STRING",checkedBinding:"STRING",disabledBinding:"STRING",viewName:"STRING"},hashContexts:{type:b,classNames:b,checkedBinding:b,disabledBinding:b,viewName:b},contexts:[],types:[],data:e},k?k.call(b,l):p.call(b,"input",l)))),e.buffer.push("\n    <label class='switch-label' "),e.buffer.push(o(c["bind-attr"].call(b,{hash:{"for":"switchCheckbox.elementId"},hashTypes:{"for":"STRING"},hashContexts:{"for":b},contexts:[],types:[],data:e}))),e.buffer.push(">\n      <div class='switch-inner'></div>\n      <div class='switch-control'></div>\n    </label>\n    "),j=c.unless.call(b,"_positionLeft",{hash:{},hashTypes:{},hashContexts:{},inverse:n.noop,fn:n.program(4,h,e),contexts:[b],types:["ID"],data:e}),(j||0===j)&&e.buffer.push(j),e.buffer.push("\n</div>"),m});